// components/pageBuilder.js
import { createTableComponent } from './tableComponent.js';

function getUserInfo() {
    // Access clientData directly from globalState
    const user = JSON.parse(localStorage.getItem('user')) || {};

    console.log('this is client data: ', user)
    
    // Set default values if clientData is missing
    const fname = user.fname || 'First Name';
    const lname = user.lname || 'Last Name';
    
    return { fname, lname };
}

export function splitDataIntoPages(data, availableContentHeightPage1, availableContentHeightOtherPages, rowHeight, headerHeight) {
    const pages = [];
    let currentPageData = [];
    let currentPageHeight = headerHeight;
    let pageNumber = 1;

    data.forEach((item) => {
        // Calculate the height if this row were added
        const newPageHeight = currentPageHeight + rowHeight;

        // Determine the max content height for the current page
        const maxContentHeight = pageNumber === 1 ? availableContentHeightPage1 : availableContentHeightOtherPages;

        // Only add the row if it fits entirely on the current page
        if (newPageHeight <= maxContentHeight) {
            currentPageData.push(item);
            currentPageHeight = newPageHeight;
        } else {
            // Push current data and reset for a new page
            pages.push(currentPageData);
            currentPageData = [item];
            currentPageHeight = headerHeight + rowHeight; // Reset height for the new page
            pageNumber++;
        }
    });

    // Add any remaining data to the last page
    if (currentPageData.length > 0) {
        pages.push(currentPageData);
    }

    return pages;
}


export function generatePages(title, pagesData) {
    const contentBody = document.getElementById('contentBody');
    contentBody.innerHTML = '';

    const totalPages = pagesData.length;
    pagesData.forEach((pageData, index) => {
        const pageNumber = index + 1;
        const { pageContainer, pageContent } = createPageContainer(pageNumber, totalPages);

        if (pageNumber === 1) {
            const headerTitle = document.createElement('h1');
            headerTitle.textContent = title;
            pageContent.appendChild(headerTitle);
        }

        const tableComponent = createTableComponent(pageData);
        pageContent.appendChild(tableComponent);
        contentBody.appendChild(pageContainer);
    });
}

export function createPageContainer(pageNumber, totalPages) {
    const pageContainer = document.createElement('div');
    pageContainer.className = 'page';

    const pageContent = document.createElement('div');
    pageContent.className = 'page-content';

    const footer = document.createElement('div');
    footer.className = 'page-footer';

    // Define generatedDate and user info inside the function
    const generatedDate = new Date().toLocaleString();
    const { fname, lname } = getUserInfo();

    footer.innerHTML = `
        <div class="footer-content">
            <div class="foot">
                <span>Report Generated: ${generatedDate}</span>
                <span>Generated By: ${fname} ${lname}</span>
            </div>
            <div class="foot">
                <span>Page ${pageNumber} of ${totalPages}</span>
                <span>Report generated with: 911 Emerge-N-See report generator</span>
            </div>
        </div>
    `;

    pageContainer.appendChild(pageContent);
    pageContainer.appendChild(footer);

    return { pageContainer, pageContent };
}
