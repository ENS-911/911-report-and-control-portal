// reportBuilder.js
import { globalState } from '../reactive/state.js';
import { ReportTypeSelector } from '../forms/components/ReportTypeSelector.js';
import agencyReportForm from '../forms/agencyReportForm.js'; // Import the form

export function loadPage() {
    const menuContent = document.getElementById('menuContent');
    const contentBody = document.getElementById('contentBody');

    menuContent.innerHTML = '';
    contentBody.innerHTML = '';
    menuContent.appendChild(ReportTypeSelector());

    // Handle Report Type Selection
    const reportTypeSelector = document.getElementById('reportTypeSelector');
    if (reportTypeSelector) {
        // Remove existing event listeners to prevent duplicates
        reportTypeSelector.removeEventListener('change', handleReportTypeChange);
        reportTypeSelector.addEventListener('change', handleReportTypeChange);
    }
}

async function handleReportTypeChange(e) {
    const reportType = e.target.value;
    globalState.setState({ selectedReportType: reportType });
    loadForm(reportType);
}

async function loadForm(reportType) {
    try {
        const formModule = await import(`../forms/${reportType}Form.js`);

        if (formModule.loadReportComponents) {
            // Instantiate PageController
            const PageController = (await import('../forms/controllers/pageController.js')).default;
            const pageController = new PageController();
            globalState.setState({ pageController: pageController });

            // Load and initialize report components
            await formModule.loadReportComponents(pageController);
        } else {
            console.warn(`loadReportComponents function not found in ${reportType}Form.js`);
        }
    } catch (error) {
        console.error(`Error loading form for ${reportType}:`, error);
        document.getElementById('contentBody').innerHTML = '<p>Error loading report form</p>';
    }
}

// generateReport can be expanded as needed
export function generateReport() {
    const pageController = globalState.getState().pageController;

    if (!pageController) {
        console.error("PageController not found in state");
        return;
    }

    // Additional actions can be implemented here
    console.log("Report data and PageController are available. Report generated by LoadOrchestrator.");
}
